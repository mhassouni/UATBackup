//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class Catalogue_JSON {

	public Body body {get;set;} 

	public Catalogue_JSON(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'body') {
						body = new Body(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'Catalogue_JSON consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Body {
		public Produit produit {get;set;} 

		public Body(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'produit') {
							produit = new Produit(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Body consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Produit {
		public String code_pf {get;set;} 
		public String charge_utile {get;set;} 
		public String standard_pf {get;set;} 
		public String marque {get;set;} 
		public String ptac {get;set;} 
		public String modele {get;set;} 
		public String amenagement_chassis {get;set;} 
		public String longueur_interieur {get;set;} 
		public String largeur_interieur {get;set;} 
		public String hauteur_interieur {get;set;} 
		public String hauteur_maxi_hors_tout {get;set;} 
		public String largeur {get;set;} 
		public String longueur {get;set;} 
		public String hauteur_seuil {get;set;} 
		public String empattement {get;set;} 
		public String porte_a_faux_arr {get;set;} 
		public String volume_palettes {get;set;} 
		public String amenagement_caisse {get;set;} 
		public String amenagement_groupe {get;set;} 
		public String amenagement_hayon {get;set;} 
        public String poids_a_vide {get;set;}
        public String ptra {get;set;}
        public String Hauteur_passage_arriere {get;set;}
        public String Energie{get;set;}
		public String libelle_descriptif {get;set;}


		public Produit(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'code_pf') {
							code_pf = parser.getText();
						} else if (text == 'charge_utile') {
							charge_utile = parser.getText();
						} else if (text == 'standard_pf') {
							standard_pf = parser.getText();
						} else if (text == 'marque') {
							marque = parser.getText();
						} else if (text == 'ptac') {
							ptac = parser.getText();
						} else if (text == 'modele') {
							modele = parser.getText();
						} else if (text == 'amenagement_chassis') {
							amenagement_chassis = parser.getText();
						} else if (text == 'longueur_interieur') {
							longueur_interieur = parser.getText();
						} else if (text == 'largeur_interieur') {
							largeur_interieur = parser.getText();
						} else if (text == 'hauteur_interieur') {
							hauteur_interieur = parser.getText();
						} else if (text == 'hauteur_maxi_hors_tout') {
							hauteur_maxi_hors_tout = parser.getText();
						} else if (text == 'largeur') {
							largeur = parser.getText();
						} else if (text == 'longueur') {
							longueur = parser.getText();
						} else if (text == 'hauteur_seuil') {
							hauteur_seuil = parser.getText();
						} else if (text == 'empattement') {
							empattement = parser.getText();
						} else if (text == 'porte_a_faux_arr') {
							porte_a_faux_arr = parser.getText();
						} else if (text == 'volume_palettes') {
							volume_palettes = parser.getText();
						} else if (text == 'amenagement_caisse') {
							amenagement_caisse = parser.getText();
						} else if (text == 'amenagement_groupe') {
							amenagement_groupe = parser.getText();
						} else if (text == 'amenagement_hayon') {
							amenagement_hayon = parser.getText();
						} 
                        else if (text == 'hauteur_passage_arriere') {
							hauteur_passage_arriere = parser.getText();
						} 
                         else if (text == 'ptra') {
							ptra = parser.getText();
                             system.debug('PTRA:'+ptra);
						} 
                         else if (text == 'poids_a_vide') {
							poids_a_vide = parser.getText();
						} 
                          else if (text == 'energie') {
							Energie = parser.getText();
                          }
                        else if (text == 'libelle_descriptif') {
							libelle_descriptif = parser.getText();
						}
                        
                        else {
							System.debug(LoggingLevel.WARN, 'Produit consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static Catalogue_JSON parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new Catalogue_JSON(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	




}