global with sharing class FoliateamCTI{
    webService static String searchByNameOrNumber(String sInput, Integer nLimit, String sParams) {        
        List<List<SObject>> searchList;
        
        if (sInput.length() > 1) {
            String query = 'FIND \'' + String.escapeSingleQuotes(sInput) + '*\' ';
    
            if (sInput.isNumeric()) {
                query += 'IN PHONE FIELDS ';
            } else {
                query += 'IN NAME FIELDS ';
            }
            
            String queryEntities = '';
            
            List<FoliateamCTI_SearchParam> searchParams = FoliateamCTI_SearchParam.parse(sParams);
            for (FoliateamCTI_SearchParam searchParam : searchParams) {
                String entityName = searchParam.entityName;

                String queryProps = '';
                
                if (entityName=='Contact') {
                    queryProps = 'Id, Name, Phone, HomePhone, MobilePhone, Account.Name';
                }
                else if (entityName=='Account') {
                    queryProps = 'Id, Name, Phone';
                }                
                else if (entityName=='Lead') {
                    queryProps = 'Id, Name, Phone, MobilePhone, Company';
                }
                else if (entityName=='User') {
                    queryProps = 'Name, Phone, Extension, MobilePhone';
                }
                
                List<FoliateamCTI_SearchParam.Properties> properties =  searchParam.properties;
                for (FoliateamCTI_SearchParam.Properties prop : properties) {
                    String displayName = prop.displayName;
                    String apiName = prop.apiName;                
                    if (!queryProps.contains(apiName)) {
                        if (queryProps.length()>0) {
                            queryProps += ', ' + apiName; 
                        }
                        else {
                            queryProps += apiName; 
                        }  
                    }                    
                }

                if (queryProps.length()>0) {
                    if (queryEntities.length()>0) {
                       queryEntities += ', ' + entityName  + '(' + queryProps +')'; 
                    }
                    else {
                       queryEntities += entityName + '(' + queryProps +')'; 
                    }
                }
                                
            }
            
            system.debug('queryEntities=' + queryEntities);
            
            query += 'RETURNING Contact(Id, Name, Phone, HomePhone, MobilePhone, Account.Name),';
            query += 'Account(Id, Name, Phone),';       
            if (leadsEnabled) {
                query += 'Lead(Id, Name, Phone, MobilePhone, Company),';
            }
            query += 'User(Name, Phone, Extension, MobilePhone)';
            
            if (queryEntities.length()>0) {
                query += ',' + queryEntities;
            }
            
            searchList = search.query(query);
        }
        
        String JSONString = JSON.serialize(searchList);
        return JSONString;
    }
    
    static Boolean leadsEnabled {
        get {
            if (leadsEnabled == null) {
                // Determine if current user can read Lead objects.
                Boolean canReadLead = false;
                if (Schema.getGlobalDescribe().containsKey('Lead')) {
                    Schema.DescribeSObjectResult leadDescribe = Schema.getGlobalDescribe().get('Lead').getDescribe();
                    canReadLead = (leadDescribe != null && leadDescribe.isAccessible());
                }
                leadsEnabled = canReadLead; 
            }
            return leadsEnabled;
        }
        private set;
    }     
 
    webService static String selectById(String sId, String sParams) {        
        
        List<sObject> sobjList;
        
        if (sId.length() > 1) {
           
            List<FoliateamCTI_SearchParam> searchParams = FoliateamCTI_SearchParam.parse(sParams);
            for (FoliateamCTI_SearchParam searchParam : searchParams) {
                
                String entityName = searchParam.entityName;
                String entityProps = '';
                
                List<FoliateamCTI_SearchParam.Properties> properties =  searchParam.properties;
                for (FoliateamCTI_SearchParam.Properties prop : properties) {
                    String displayName = prop.displayName;
                    String apiName = prop.apiName;                
                    if (!entityProps.contains(apiName)) {
                        if (entityProps.length()>0) {
                            entityProps += ', ' + apiName; 
                        }
                        else {
                            entityProps += apiName; 
                        }  
                    }                    
                }

                String query = 'SELECT ' + entityProps + ' FROM ' + entityName + ' WHERE Id = \''  + sId  + '\'';
                system.debug('query=' + query);
                sobjList = Database.query(query);
            }
        }
        String JSONString = JSON.serialize(sobjList);
        return JSONString;
    }
}